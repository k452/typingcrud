name: Deploy TypingCRUD

on:
  push:
    tags:
      - v1

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['12.X']

    steps:
    - uses: actions/checkout@v1
      with:
        ref: 'v1'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Yarn Install
      run: yarn install

    - name: Yarn Build
      run: yarn build
      env:
        REACT_APP_COGNITO_REGION: ${{ secrets.REGION }}
        REACT_APP_COGNITO_IDENTITY_POOL_ID: ${{ secrets.IDENTITY_POOL_ID }}
        REACT_APP_COGNITO_USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
        REACT_APP_COGNITO_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        REACT_APP_API_BASE: ${{ secrets.API_BASE }}

    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./build

  deploy:
    needs: build

    runs-on: ubuntu-latest
    
    steps:
    - name: Download build result
      uses: actions/download-artifact@v2
      with:
        name: build
        path: ./build

    - name: S3 sync
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.REGION }}
        SOURCE_DIR: './build'
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    - name: Clear cache in CloudFront
      uses: chetan/invalidate-cloudfront-action@v1.2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DISTRIBUTION: ${{ secrets.CF_DISTRIBUTION }}
        PATHS: "/*"
        AWS_REGION: ${{ secrets.REGION }}