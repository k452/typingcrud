name: TypingCRUD
on:
  push:
    branches:
      - master
    tags:
      - v1

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.X']

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - uses: actions/cache@v2
      id: node_modules_cache
      with:
        path: node_modules
        key: ${{ matrix.os }}-node-v${{ matrix.nodeVersion }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

    - if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: yarn

    - run: yarn build
      env:
        REACT_APP_COGNITO_REGION: ${{ secrets.REGION }}
        REACT_APP_COGNITO_IDENTITY_POOL_ID: ${{ secrets.IDENTITY_POOL_ID }}
        REACT_APP_COGNITO_USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
        REACT_APP_COGNITO_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        REACT_APP_API_BASE: ${{ secrets.API_BASE }}
        REACT_APP_TRACKING_ID: ${{ secrets.TRACKING_ID }}

    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./build

  CD:
    needs: CI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: build
        path: ./build

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}
    - run: aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET }}/
    - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION }} --paths "/*"
